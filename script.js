document.addEventListener('DOMContentLoaded', () => {

    // --- –ï–ª–µ–º–µ–Ω—Ç–∏ DOM ---
    const temperatureEl = document.getElementById('temperature');
    const timeEl = document.getElementById('time');
    const dateEl = document.getElementById('date');
    const weekdayEl = document.getElementById('weekday');
    const themeToggle = document.getElementById('theme-toggle');
    const weatherSoundToggle = document.getElementById('weather-sound-toggle');
    const alertSoundToggle = document.getElementById('alert-sound-toggle');
    const kyivStatusEl = document.getElementById('kyiv-status');
    // –û–ù–û–í–õ–ï–ù–û: –¢–µ–ø–µ—Ä —Ü–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —Å–ø–∏—Å–∫—É
    const otherAlertsContainer = document.getElementById('other-alerts-container'); 

    // --- –ó–º—ñ–Ω–Ω—ñ —Å—Ç–∞–Ω—É ---
    let lastTemperature = null;
    let isKyivAlertActive = false;
    let weatherSoundEnabled = true;
    let alertSoundEnabled = true;

    // --- –û–±'—î–∫—Ç–∏ –∞—É–¥—ñ–æ ---
    const sounds = {
        tempChange: new Audio('sounds/temp_change.mp3'),
        alertStart: new Audio('sounds/alert_start.mp3'),
        alertEnd: new Audio('sounds/alert_end.mp3')
    };

    // --- API –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è ---
    const weatherApiUrl = 'https://api.open-meteo.com/v1/forecast?latitude=50.462722&longitude=30.491602&current_weather=true';
    const alertsApiUrl = '/api/alerts';

    //============================================
    // –ë–õ–û–ö 1: –ü–û–ì–û–î–ê
    //============================================
    async function fetchWeather() {
        try {
            const response = await fetch(weatherApiUrl);
            if (!response.ok) throw new Error(`–ü–æ–º–∏–ª–∫–∞ HTTP –∑ –ø–æ–≥–æ–¥–æ—é! –°—Ç–∞—Ç—É—Å: ${response.status}`);
            const data = await response.json();
            const currentTemp = Math.round(data.current_weather.temperature);
            temperatureEl.textContent = currentTemp;
            if (lastTemperature !== null && lastTemperature !== currentTemp && weatherSoundEnabled) {
                sounds.tempChange.play();
            }
            lastTemperature = currentTemp;
        } catch (error) {
            console.error("–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ –ø–æ–≥–æ–¥–∏:", error);
            temperatureEl.textContent = 'XX';
        }
    }

    //============================================
    // –ë–õ–û–ö 2: –ß–ê–°, –î–ê–¢–ê, –î–ï–ù–¨ –¢–ò–ñ–ù–Ø
    //============================================
    function updateTime() {
        const now = new Date();
        const optionsDate = { year: 'numeric', month: 'long', day: 'numeric' };
        const optionsWeekday = { weekday: 'long' };
        timeEl.textContent = now.toLocaleTimeString('uk-UA');
        dateEl.textContent = now.toLocaleDateString('uk-UA', optionsDate);
        let weekday = now.toLocaleDateString('uk-UA', optionsWeekday);
        weekdayEl.textContent = weekday.charAt(0).toUpperCase() + weekday.slice(1);
    }

    //============================================
    // –ë–õ–û–ö 3: –ü–û–í–Ü–¢–†–Ø–ù–Ü –¢–†–ò–í–û–ì–ò (–í–ò–ü–†–ê–í–õ–ï–ù–û)
    //============================================
    async function fetchAlerts() {
        try {
            const response = await fetch(alertsApiUrl);
            if (!response.ok) throw new Error('–ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –≤—ñ–¥ –ø—Ä–æ–∫—Å—ñ-—Å–µ—Ä–≤–µ—Ä–∞');
            
            const data = await response.json();
            const allAlerts = data.alerts;
            const kyivAlertNow = allAlerts.some(alert => alert.location_title === '–º. –ö–∏—ó–≤');

            if (kyivAlertNow) {
                kyivStatusEl.textContent = '–º. –ö–∏—ó–≤: –ü–û–í–Ü–¢–†–Ø–ù–ê –¢–†–ò–í–û–ì–ê';
                kyivStatusEl.className = 'alert-status status-active';
            } else {
                kyivStatusEl.textContent = '–º. –ö–∏—ó–≤: –ù–µ–º–∞—î —Ç—Ä–∏–≤–æ–≥–∏';
                kyivStatusEl.className = 'alert-status status-inactive';
            }

            otherAlertsContainer.innerHTML = ''; // –û—á–∏—â—É—î–º–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
            const otherRegions = allAlerts.filter(alert => alert.location_title !== '–º. –ö–∏—ó–≤' && alert.alert_type === 'air_raid');
            
            if (otherRegions.length > 0) {
                const title = document.createElement('h4');
                title.textContent = '–¢—Ä–∏–≤–æ–≥–∞ –≤ —ñ–Ω—à–∏—Ö –æ–±–ª–∞—Å—Ç—è—Ö:';
                otherAlertsContainer.appendChild(title);
                otherRegions.forEach(alert => {
                    const regionSpan = document.createElement('span');
                    regionSpan.className = 'region';
                    regionSpan.textContent = alert.location_title.replace(" –æ–±–ª–∞—Å—Ç—å", "").replace(" –ê–≤—Ç–æ–Ω–æ–º–Ω–∞ –†–µ—Å–ø—É–±–ª—ñ–∫–∞", "–ê–†");
                    otherAlertsContainer.appendChild(regionSpan);
                });
            } else {
                const noAlertsSpan = document.createElement('span');
                noAlertsSpan.className = 'no-alerts-msg';
                noAlertsSpan.textContent = '–ù–∞—Ä–∞–∑—ñ –ø–æ–≤—ñ—Ç—Ä—è–Ω–∏—Ö —Ç—Ä–∏–≤–æ–≥ –≤ —ñ–Ω—à–∏—Ö –æ–±–ª–∞—Å—Ç—è—Ö –Ω–µ–º–∞—î.';
                otherAlertsContainer.appendChild(noAlertsSpan);
            }

            if (kyivAlertNow && !isKyivAlertActive) {
                isKyivAlertActive = true;
                if (alertSoundEnabled) sounds.alertStart.play();
            } else if (!kyivAlertNow && isKyivAlertActive) {
                isKyivAlertActive = false;
                if (alertSoundEnabled) sounds.alertEnd.play();
            }
        } catch (error) {
            console.error("–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —Å—Ç–∞—Ç—É—Å —Ç—Ä–∏–≤–æ–≥:", error);
            kyivStatusEl.textContent = '–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è';
            kyivStatusEl.className = 'alert-status';
            // –í–ò–ü–†–ê–í–õ–ï–ù–û: –ü—Ä–∏–±–∏—Ä–∞—î–º–æ –∑–≤–µ—Ä–Ω–µ–Ω–Ω—è –¥–æ –Ω–µ—ñ—Å–Ω—É—é—á–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞
            if(otherAlertsContainer) {
                otherAlertsContainer.innerHTML = '<p>–ü–æ–º–∏–ª–∫–∞. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ, —á–∏ –∑–∞–ø—É—â–µ–Ω–∏–π –ø—Ä–æ–∫—Å—ñ-—Å–µ—Ä–≤–µ—Ä.</p>';
            }
        }
    }
    
    //============================================
    // –ö–ï–†–£–í–ê–ù–ù–Ø –Ü–ù–¢–ï–†–§–ï–ô–°–û–ú –¢–ê –ó–ê–ü–£–°–ö
    //============================================
    weatherSoundToggle.addEventListener('click', () => {
        weatherSoundEnabled = !weatherSoundEnabled;
        weatherSoundToggle.textContent = weatherSoundEnabled ? 'üîî –ó–≤—É–∫: –£–≤—ñ–º–∫–Ω–µ–Ω–æ' : 'üîï –ó–≤—É–∫: –í–∏–º–∫–Ω–µ–Ω–æ';
    });
    alertSoundToggle.addEventListener('click', () => {
        alertSoundEnabled = !alertSoundEnabled;
        alertSoundToggle.textContent = alertSoundEnabled ? 'üîî –¢—Ä–∏–≤–æ–≥–∞: –£–≤—ñ–º–∫–Ω–µ–Ω–æ' : 'üîï –¢—Ä–∏–≤–æ–≥–∞: –í–∏–º–∫–Ω–µ–Ω–æ';
    });
    themeToggle.addEventListener('change', () => {
        document.body.classList.toggle('dark-theme', themeToggle.checked);
    });

    // --- –ü–µ—Ä—à–∏–π –∑–∞–ø—É—Å–∫ —Ç–∞ —ñ–Ω—Ç–µ—Ä–≤–∞–ª–∏ ---
    fetchWeather();
    updateTime();
    fetchAlerts();
    setInterval(fetchWeather, 60 * 1000);
    setInterval(updateTime, 1000);
    setInterval(fetchAlerts, 10 * 1000);
});